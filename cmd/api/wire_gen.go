// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package main

import (
	"github.com/HasanNugroho/starter-golang/internal"
	"github.com/HasanNugroho/starter-golang/internal/configs"
	"github.com/HasanNugroho/starter-golang/internal/users"
	"github.com/HasanNugroho/starter-golang/internal/users/repository"
	"github.com/gin-gonic/gin"
	"github.com/google/wire"
)

// Injectors from injection.go:

func InitializeApp(r *gin.Engine, cfg *configs.RDBMSConfig) (*internal.RouteConfig, error) {
	userRepository := repository.NewUserRepository(cfg)
	userService := users.NewUserService(userRepository)
	userHandler := users.NewUserHandler(userService)
	routeConfig := internal.NewRouter(r, userHandler)
	return routeConfig, nil
}

// injection.go:

var userSet = wire.NewSet(repository.NewUserRepository, wire.Bind(new(repository.IUserRepository), new(*repository.UserRepository)), users.NewUserService, wire.Bind(new(users.IUserService), new(*users.UserService)), users.NewUserHandler)
