basePath: /api/v1
definitions:
  model.UserCreateUpdateModel:
    properties:
      email:
        type: string
      name:
        type: string
      password:
        minLength: 6
        type: string
    required:
    - email
    - name
    - password
    type: object
  model.UserModel:
    properties:
      created_at:
        type: string
      email:
        type: string
      id:
        type: string
      name:
        type: string
      password:
        type: string
      updated_at:
        type: string
    type: object
  model.UserModelResponse:
    properties:
      created_at:
        type: string
      email:
        type: string
      id:
        type: string
      name:
        type: string
    type: object
  shared.DataWithPagination:
    properties:
      items: {}
      paging:
        $ref: '#/definitions/shared.Pagination'
    type: object
  shared.Pagination:
    properties:
      limit:
        type: integer
      page:
        type: integer
      total_items:
        type: integer
      total_pages:
        type: integer
    type: object
  shared.Response:
    properties:
      data: {}
      message:
        type: string
      status:
        type: integer
    type: object
externalDocs:
  description: OpenAPI
  url: https://swagger.io/resources/open-api/
host: localhost:7000
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: This is a sample server celler server.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Swagger Example API
  version: "1.0"
paths:
  /users:
    get:
      consumes:
      - application/json
      description: Retrieve a list of all users
      parameters:
      - default: 10
        description: total data per-page
        in: query
        minimum: 1
        name: limit
        type: integer
      - default: 1
        description: page
        in: query
        minimum: 1
        name: page
        type: integer
      - description: keyword
        in: query
        name: search
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/shared.Response'
            - properties:
                data:
                  allOf:
                  - $ref: '#/definitions/shared.DataWithPagination'
                  - properties:
                      items:
                        items:
                          $ref: '#/definitions/model.UserModelResponse'
                        type: array
                    type: object
              type: object
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/shared.Response'
      summary: Get all users
      tags:
      - users
    post:
      consumes:
      - application/json
      description: Create an user
      parameters:
      - description: User Data
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/model.UserCreateUpdateModel'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/shared.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/shared.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/shared.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/shared.Response'
      summary: Create an user
      tags:
      - users
  /users/{id}:
    delete:
      consumes:
      - application/json
      description: Delete user by ID
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/shared.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/shared.Response'
      summary: Delete user
      tags:
      - users
    get:
      consumes:
      - application/json
      description: Retrieve a user by ID
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/shared.Response'
            - properties:
                data:
                  $ref: '#/definitions/model.UserModel'
              type: object
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/shared.Response'
      summary: Get all users
      tags:
      - users
    put:
      consumes:
      - application/json
      description: Update user
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      - description: User Data
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/model.UserCreateUpdateModel'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/shared.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/shared.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/shared.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/shared.Response'
      summary: Update user
      tags:
      - users
securityDefinitions:
  BasicAuth:
    type: basic
swagger: "2.0"
